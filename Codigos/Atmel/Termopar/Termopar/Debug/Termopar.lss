
Termopar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800200  000009d4  00000a68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000087  0080021c  0080021c  00000a84  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ae0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000b20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000003bf  00000000  00000000  00000b60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000027c  00000000  00000000  00000f1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000025e  00000000  00000000  0000119b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000080  00000000  00000000  000013fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000023a  00000000  00000000  0000147c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000020e  00000000  00000000  000016b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000018c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 ed       	ldi	r30, 0xD4	; 212
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 31       	cpi	r26, 0x1C	; 28
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ac e1       	ldi	r26, 0x1C	; 28
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a3 3a       	cpi	r26, 0xA3	; 163
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	5a d0       	rcall	.+180    	; 0x1d4 <main>
 120:	57 c4       	rjmp	.+2222   	; 0x9d0 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <gettemp>:
	

	/* como temos que fazer com que o cs mude de estado baixo pra alto 
	para funcionar, colocamos então o cs em nivel baixo, sinalizando que foi
	selecionado para leitura	*/
	CS_Port &= ~(1<<CS);											//selecionar porta chip select
 124:	28 98       	cbi	0x05, 0	; 5

	for(cont = 0 ; cont < 16 ; cont++){									//ler os 16 Bits 
		bit = 15 - cont;												//calculo do atual Bitnr
	
		/* variando o clock de alto para baixo, fazendo a leitura */
		SCK_Port |= (1 << SCK);											//SCK em nivel alto
 126:	29 9a       	sbi	0x05, 1	; 5
 128:	9b e0       	ldi	r25, 0x0B	; 11

uint16_t gettemp(void){		
												//função para obter temperatura
	uint8_t bit = 0, bitnr = 12;										//variaveis
	uint8_t cont = 0;
	uint16_t data_temperatura = 0;
 12a:	40 e0       	ldi	r20, 0x00	; 0
 12c:	50 e0       	ldi	r21, 0x00	; 0
			/* como são 12 bits de dados, na medida que for iniciada a leitura, o primeiro
			 bit não é importante para nós, assim como os bit abaixo de 3, assim vai para 12 a contagem
			 que é necessaria para nossa construção do sistema */
		}else{			
			//quando bit for maior que 14 e menor que 3, bitnr é 12
			bitnr = 12;
 12e:	2c e0       	ldi	r18, 0x0C	; 12
 130:	8c e0       	ldi	r24, 0x0C	; 12
			if((SO_Pin & (1 << SO))){									// quando SO é 1 então
				bitnr--;												//decrementa o bitnr
				data_temperatura |= (1 << bitnr);								// poe rohdata para 1
			}else{														// quando SO não é 1 então
				bitnr--;												// decrementa o bitnr
				data_temperatura &= ~(1 << bitnr);								//  poe rohdata pra 0
 132:	e1 e0       	ldi	r30, 0x01	; 1
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	1f c0       	rjmp	.+62     	; 0x176 <gettemp+0x52>

	for(cont = 0 ; cont < 16 ; cont++){									//ler os 16 Bits 
		bit = 15 - cont;												//calculo do atual Bitnr
	
		/* variando o clock de alto para baixo, fazendo a leitura */
		SCK_Port |= (1 << SCK);											//SCK em nivel alto
 138:	29 9a       	sbi	0x05, 1	; 5
	

		if((bit <= 14) && (bit >= 3)){									//apenas 12 bits dos 16 são importantes
 13a:	9c 30       	cpi	r25, 0x0C	; 12
 13c:	d0 f4       	brcc	.+52     	; 0x172 <gettemp+0x4e>
			/* só os bits entrre 14 e 3 sao uteis para a leitura vide datasheet do max */
			if((SO_Pin & (1 << SO))){									// quando SO é 1 então
 13e:	1b 9b       	sbis	0x03, 3	; 3
 140:	0b c0       	rjmp	.+22     	; 0x158 <gettemp+0x34>
				bitnr--;												//decrementa o bitnr
 142:	21 50       	subi	r18, 0x01	; 1
				data_temperatura |= (1 << bitnr);								// poe rohdata para 1
 144:	bf 01       	movw	r22, r30
 146:	02 2e       	mov	r0, r18
 148:	02 c0       	rjmp	.+4      	; 0x14e <gettemp+0x2a>
 14a:	66 0f       	add	r22, r22
 14c:	77 1f       	adc	r23, r23
 14e:	0a 94       	dec	r0
 150:	e2 f7       	brpl	.-8      	; 0x14a <gettemp+0x26>
 152:	46 2b       	or	r20, r22
 154:	57 2b       	or	r21, r23
 156:	0e c0       	rjmp	.+28     	; 0x174 <gettemp+0x50>
			}else{														// quando SO não é 1 então
				bitnr--;												// decrementa o bitnr
 158:	21 50       	subi	r18, 0x01	; 1
				data_temperatura &= ~(1 << bitnr);								//  poe rohdata pra 0
 15a:	bf 01       	movw	r22, r30
 15c:	02 2e       	mov	r0, r18
 15e:	02 c0       	rjmp	.+4      	; 0x164 <gettemp+0x40>
 160:	66 0f       	add	r22, r22
 162:	77 1f       	adc	r23, r23
 164:	0a 94       	dec	r0
 166:	e2 f7       	brpl	.-8      	; 0x160 <gettemp+0x3c>
 168:	60 95       	com	r22
 16a:	70 95       	com	r23
 16c:	46 23       	and	r20, r22
 16e:	57 23       	and	r21, r23
 170:	01 c0       	rjmp	.+2      	; 0x174 <gettemp+0x50>
			/* como são 12 bits de dados, na medida que for iniciada a leitura, o primeiro
			 bit não é importante para nós, assim como os bit abaixo de 3, assim vai para 12 a contagem
			 que é necessaria para nossa construção do sistema */
		}else{			
			//quando bit for maior que 14 e menor que 3, bitnr é 12
			bitnr = 12;
 172:	28 2f       	mov	r18, r24
 174:	91 50       	subi	r25, 0x01	; 1
		}
		SCK_Port &= ~(1 << SCK);										//SCK LO	
 176:	29 98       	cbi	0x05, 1	; 5
	/* como temos que fazer com que o cs mude de estado baixo pra alto 
	para funcionar, colocamos então o cs em nivel baixo, sinalizando que foi
	selecionado para leitura	*/
	CS_Port &= ~(1<<CS);											//selecionar porta chip select

	for(cont = 0 ; cont < 16 ; cont++){									//ler os 16 Bits 
 178:	9c 3f       	cpi	r25, 0xFC	; 252
 17a:	f1 f6       	brne	.-68     	; 0x138 <gettemp+0x14>
			bitnr = 12;
		}
		SCK_Port &= ~(1 << SCK);										//SCK LO	
	}

	CS_Port |= (1 << CS);												//cs em nivel alto para começar a funcionar		
 17c:	28 9a       	sbi	0x05, 0	; 5
	return data_temperatura;														
}
 17e:	ca 01       	movw	r24, r20
 180:	08 95       	ret

00000182 <USART_Init>:

void USART_Init( unsigned int ubrr)
{
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 182:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
 186:	80 93 c4 00 	sts	0x00C4, r24
	/*Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 18a:	88 e1       	ldi	r24, 0x18	; 24
 18c:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 190:	8e e0       	ldi	r24, 0x0E	; 14
 192:	80 93 c2 00 	sts	0x00C2, r24
 196:	08 95       	ret

00000198 <USART_Transmit>:
}
void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 198:	e0 ec       	ldi	r30, 0xC0	; 192
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	90 81       	ld	r25, Z
 19e:	95 ff       	sbrs	r25, 5
 1a0:	fd cf       	rjmp	.-6      	; 0x19c <USART_Transmit+0x4>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 1a2:	80 93 c6 00 	sts	0x00C6, r24
 1a6:	08 95       	ret

000001a8 <putchar_buf>:
}


static int putchar_buf(int c, FILE *__stream)
{
 1a8:	cf 93       	push	r28
 1aa:	df 93       	push	r29
 1ac:	c8 2f       	mov	r28, r24
 1ae:	d9 2f       	mov	r29, r25
	output[ind++%128] = c;
 1b0:	e0 91 1c 02 	lds	r30, 0x021C
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	8e 0f       	add	r24, r30
 1b8:	80 93 1c 02 	sts	0x021C, r24
 1bc:	ef 77       	andi	r30, 0x7F	; 127
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	e3 5e       	subi	r30, 0xE3	; 227
 1c2:	fd 4f       	sbci	r31, 0xFD	; 253
 1c4:	c0 83       	st	Z, r28
	USART_Transmit(c);
 1c6:	8c 2f       	mov	r24, r28
 1c8:	e7 df       	rcall	.-50     	; 0x198 <USART_Transmit>
	
	return c;
}
 1ca:	8c 2f       	mov	r24, r28
 1cc:	9d 2f       	mov	r25, r29
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <main>:


int main (){
	

	SO_DDR &= ~(1 << SO);						// define SO ddr(Data direction) como 0 ( input)
 1d4:	23 98       	cbi	0x04, 3	; 4
	CS_DDR |= (1 << CS);						// define o DDR do CS e SCK como 1 (output)
 1d6:	20 9a       	sbi	0x04, 0	; 4
	SCK_DDR |= (1 << SCK);
 1d8:	21 9a       	sbi	0x04, 1	; 4
	
	SO_Port |= (1<<SO);						   //pullups ligados			//Pullups an.
 1da:	2b 9a       	sbi	0x05, 3	; 5

	CS_Port |= (1 << CS);				    	//CS HI	//tudo no default
 1dc:	28 9a       	sbi	0x05, 0	; 5
	SCK_Port &= ~(1 << SCK);				    //SCK LO
 1de:	29 98       	cbi	0x05, 1	; 5

	uint16_t data;
	uint16_t temperatura;


	USART_Init(MYUBRR);
 1e0:	87 e6       	ldi	r24, 0x67	; 103
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	ce df       	rcall	.-100    	; 0x182 <USART_Init>
		data = gettemp();

		//dividido por 4 pois 12 bits são 4096 combinações possiveis e o termopar vai ate 1024 graus celsius
		temperatura = data*0.25;

		stdout = &mystdout;
 1e6:	0f 2e       	mov	r0, r31
 1e8:	fd e9       	ldi	r31, 0x9D	; 157
 1ea:	ef 2e       	mov	r14, r31
 1ec:	f2 e0       	ldi	r31, 0x02	; 2
 1ee:	ff 2e       	mov	r15, r31
 1f0:	f0 2d       	mov	r31, r0
 1f2:	00 e0       	ldi	r16, 0x00	; 0
 1f4:	12 e0       	ldi	r17, 0x02	; 2
		printf("temp é = %d\n",temperatura);
 1f6:	ce e0       	ldi	r28, 0x0E	; 14
 1f8:	d2 e0       	ldi	r29, 0x02	; 2

	USART_Init(MYUBRR);
	//leitura de dado puro do termopar
	while(1){
	
		data = gettemp();
 1fa:	94 df       	rcall	.-216    	; 0x124 <gettemp>

		//dividido por 4 pois 12 bits são 4096 combinações possiveis e o termopar vai ate 1024 graus celsius
		temperatura = data*0.25;

		stdout = &mystdout;
 1fc:	f7 01       	movw	r30, r14
 1fe:	13 83       	std	Z+3, r17	; 0x03
 200:	02 83       	std	Z+2, r16	; 0x02
	while(1){
	
		data = gettemp();

		//dividido por 4 pois 12 bits são 4096 combinações possiveis e o termopar vai ate 1024 graus celsius
		temperatura = data*0.25;
 202:	bc 01       	movw	r22, r24
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	45 d0       	rcall	.+138    	; 0x294 <__floatunsisf>
 20a:	20 e0       	ldi	r18, 0x00	; 0
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	40 e8       	ldi	r20, 0x80	; 128
 210:	5e e3       	ldi	r21, 0x3E	; 62
 212:	a6 d0       	rcall	.+332    	; 0x360 <__mulsf3>
 214:	13 d0       	rcall	.+38     	; 0x23c <__fixunssfsi>

		stdout = &mystdout;
		printf("temp é = %d\n",temperatura);
 216:	7f 93       	push	r23
 218:	6f 93       	push	r22
 21a:	df 93       	push	r29
 21c:	cf 93       	push	r28
 21e:	2b d1       	rcall	.+598    	; 0x476 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 220:	8f ef       	ldi	r24, 0xFF	; 255
 222:	9f ef       	ldi	r25, 0xFF	; 255
 224:	e9 e5       	ldi	r30, 0x59	; 89
 226:	81 50       	subi	r24, 0x01	; 1
 228:	90 40       	sbci	r25, 0x00	; 0
 22a:	e0 40       	sbci	r30, 0x00	; 0
 22c:	e1 f7       	brne	.-8      	; 0x226 <main+0x52>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <main+0x5c>
 230:	00 00       	nop
 232:	0f 90       	pop	r0
 234:	0f 90       	pop	r0
 236:	0f 90       	pop	r0
 238:	0f 90       	pop	r0
 23a:	df cf       	rjmp	.-66     	; 0x1fa <main+0x26>

0000023c <__fixunssfsi>:
 23c:	70 d0       	rcall	.+224    	; 0x31e <__fp_splitA>
 23e:	88 f0       	brcs	.+34     	; 0x262 <__fixunssfsi+0x26>
 240:	9f 57       	subi	r25, 0x7F	; 127
 242:	90 f0       	brcs	.+36     	; 0x268 <__fixunssfsi+0x2c>
 244:	b9 2f       	mov	r27, r25
 246:	99 27       	eor	r25, r25
 248:	b7 51       	subi	r27, 0x17	; 23
 24a:	a0 f0       	brcs	.+40     	; 0x274 <__fixunssfsi+0x38>
 24c:	d1 f0       	breq	.+52     	; 0x282 <__fixunssfsi+0x46>
 24e:	66 0f       	add	r22, r22
 250:	77 1f       	adc	r23, r23
 252:	88 1f       	adc	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	1a f0       	brmi	.+6      	; 0x25e <__fixunssfsi+0x22>
 258:	ba 95       	dec	r27
 25a:	c9 f7       	brne	.-14     	; 0x24e <__fixunssfsi+0x12>
 25c:	12 c0       	rjmp	.+36     	; 0x282 <__fixunssfsi+0x46>
 25e:	b1 30       	cpi	r27, 0x01	; 1
 260:	81 f0       	breq	.+32     	; 0x282 <__fixunssfsi+0x46>
 262:	77 d0       	rcall	.+238    	; 0x352 <__fp_zero>
 264:	b1 e0       	ldi	r27, 0x01	; 1
 266:	08 95       	ret
 268:	74 c0       	rjmp	.+232    	; 0x352 <__fp_zero>
 26a:	67 2f       	mov	r22, r23
 26c:	78 2f       	mov	r23, r24
 26e:	88 27       	eor	r24, r24
 270:	b8 5f       	subi	r27, 0xF8	; 248
 272:	39 f0       	breq	.+14     	; 0x282 <__fixunssfsi+0x46>
 274:	b9 3f       	cpi	r27, 0xF9	; 249
 276:	cc f3       	brlt	.-14     	; 0x26a <__fixunssfsi+0x2e>
 278:	86 95       	lsr	r24
 27a:	77 95       	ror	r23
 27c:	67 95       	ror	r22
 27e:	b3 95       	inc	r27
 280:	d9 f7       	brne	.-10     	; 0x278 <__fixunssfsi+0x3c>
 282:	3e f4       	brtc	.+14     	; 0x292 <__fixunssfsi+0x56>
 284:	90 95       	com	r25
 286:	80 95       	com	r24
 288:	70 95       	com	r23
 28a:	61 95       	neg	r22
 28c:	7f 4f       	sbci	r23, 0xFF	; 255
 28e:	8f 4f       	sbci	r24, 0xFF	; 255
 290:	9f 4f       	sbci	r25, 0xFF	; 255
 292:	08 95       	ret

00000294 <__floatunsisf>:
 294:	e8 94       	clt
 296:	09 c0       	rjmp	.+18     	; 0x2aa <__floatsisf+0x12>

00000298 <__floatsisf>:
 298:	97 fb       	bst	r25, 7
 29a:	3e f4       	brtc	.+14     	; 0x2aa <__floatsisf+0x12>
 29c:	90 95       	com	r25
 29e:	80 95       	com	r24
 2a0:	70 95       	com	r23
 2a2:	61 95       	neg	r22
 2a4:	7f 4f       	sbci	r23, 0xFF	; 255
 2a6:	8f 4f       	sbci	r24, 0xFF	; 255
 2a8:	9f 4f       	sbci	r25, 0xFF	; 255
 2aa:	99 23       	and	r25, r25
 2ac:	a9 f0       	breq	.+42     	; 0x2d8 <__floatsisf+0x40>
 2ae:	f9 2f       	mov	r31, r25
 2b0:	96 e9       	ldi	r25, 0x96	; 150
 2b2:	bb 27       	eor	r27, r27
 2b4:	93 95       	inc	r25
 2b6:	f6 95       	lsr	r31
 2b8:	87 95       	ror	r24
 2ba:	77 95       	ror	r23
 2bc:	67 95       	ror	r22
 2be:	b7 95       	ror	r27
 2c0:	f1 11       	cpse	r31, r1
 2c2:	f8 cf       	rjmp	.-16     	; 0x2b4 <__floatsisf+0x1c>
 2c4:	fa f4       	brpl	.+62     	; 0x304 <__floatsisf+0x6c>
 2c6:	bb 0f       	add	r27, r27
 2c8:	11 f4       	brne	.+4      	; 0x2ce <__floatsisf+0x36>
 2ca:	60 ff       	sbrs	r22, 0
 2cc:	1b c0       	rjmp	.+54     	; 0x304 <__floatsisf+0x6c>
 2ce:	6f 5f       	subi	r22, 0xFF	; 255
 2d0:	7f 4f       	sbci	r23, 0xFF	; 255
 2d2:	8f 4f       	sbci	r24, 0xFF	; 255
 2d4:	9f 4f       	sbci	r25, 0xFF	; 255
 2d6:	16 c0       	rjmp	.+44     	; 0x304 <__floatsisf+0x6c>
 2d8:	88 23       	and	r24, r24
 2da:	11 f0       	breq	.+4      	; 0x2e0 <__floatsisf+0x48>
 2dc:	96 e9       	ldi	r25, 0x96	; 150
 2de:	11 c0       	rjmp	.+34     	; 0x302 <__floatsisf+0x6a>
 2e0:	77 23       	and	r23, r23
 2e2:	21 f0       	breq	.+8      	; 0x2ec <__floatsisf+0x54>
 2e4:	9e e8       	ldi	r25, 0x8E	; 142
 2e6:	87 2f       	mov	r24, r23
 2e8:	76 2f       	mov	r23, r22
 2ea:	05 c0       	rjmp	.+10     	; 0x2f6 <__floatsisf+0x5e>
 2ec:	66 23       	and	r22, r22
 2ee:	71 f0       	breq	.+28     	; 0x30c <__floatsisf+0x74>
 2f0:	96 e8       	ldi	r25, 0x86	; 134
 2f2:	86 2f       	mov	r24, r22
 2f4:	70 e0       	ldi	r23, 0x00	; 0
 2f6:	60 e0       	ldi	r22, 0x00	; 0
 2f8:	2a f0       	brmi	.+10     	; 0x304 <__floatsisf+0x6c>
 2fa:	9a 95       	dec	r25
 2fc:	66 0f       	add	r22, r22
 2fe:	77 1f       	adc	r23, r23
 300:	88 1f       	adc	r24, r24
 302:	da f7       	brpl	.-10     	; 0x2fa <__floatsisf+0x62>
 304:	88 0f       	add	r24, r24
 306:	96 95       	lsr	r25
 308:	87 95       	ror	r24
 30a:	97 f9       	bld	r25, 7
 30c:	08 95       	ret

0000030e <__fp_split3>:
 30e:	57 fd       	sbrc	r21, 7
 310:	90 58       	subi	r25, 0x80	; 128
 312:	44 0f       	add	r20, r20
 314:	55 1f       	adc	r21, r21
 316:	59 f0       	breq	.+22     	; 0x32e <__fp_splitA+0x10>
 318:	5f 3f       	cpi	r21, 0xFF	; 255
 31a:	71 f0       	breq	.+28     	; 0x338 <__fp_splitA+0x1a>
 31c:	47 95       	ror	r20

0000031e <__fp_splitA>:
 31e:	88 0f       	add	r24, r24
 320:	97 fb       	bst	r25, 7
 322:	99 1f       	adc	r25, r25
 324:	61 f0       	breq	.+24     	; 0x33e <__fp_splitA+0x20>
 326:	9f 3f       	cpi	r25, 0xFF	; 255
 328:	79 f0       	breq	.+30     	; 0x348 <__fp_splitA+0x2a>
 32a:	87 95       	ror	r24
 32c:	08 95       	ret
 32e:	12 16       	cp	r1, r18
 330:	13 06       	cpc	r1, r19
 332:	14 06       	cpc	r1, r20
 334:	55 1f       	adc	r21, r21
 336:	f2 cf       	rjmp	.-28     	; 0x31c <__fp_split3+0xe>
 338:	46 95       	lsr	r20
 33a:	f1 df       	rcall	.-30     	; 0x31e <__fp_splitA>
 33c:	08 c0       	rjmp	.+16     	; 0x34e <__fp_splitA+0x30>
 33e:	16 16       	cp	r1, r22
 340:	17 06       	cpc	r1, r23
 342:	18 06       	cpc	r1, r24
 344:	99 1f       	adc	r25, r25
 346:	f1 cf       	rjmp	.-30     	; 0x32a <__fp_splitA+0xc>
 348:	86 95       	lsr	r24
 34a:	71 05       	cpc	r23, r1
 34c:	61 05       	cpc	r22, r1
 34e:	08 94       	sec
 350:	08 95       	ret

00000352 <__fp_zero>:
 352:	e8 94       	clt

00000354 <__fp_szero>:
 354:	bb 27       	eor	r27, r27
 356:	66 27       	eor	r22, r22
 358:	77 27       	eor	r23, r23
 35a:	cb 01       	movw	r24, r22
 35c:	97 f9       	bld	r25, 7
 35e:	08 95       	ret

00000360 <__mulsf3>:
 360:	0b d0       	rcall	.+22     	; 0x378 <__mulsf3x>
 362:	78 c0       	rjmp	.+240    	; 0x454 <__fp_round>
 364:	69 d0       	rcall	.+210    	; 0x438 <__fp_pscA>
 366:	28 f0       	brcs	.+10     	; 0x372 <__mulsf3+0x12>
 368:	6e d0       	rcall	.+220    	; 0x446 <__fp_pscB>
 36a:	18 f0       	brcs	.+6      	; 0x372 <__mulsf3+0x12>
 36c:	95 23       	and	r25, r21
 36e:	09 f0       	breq	.+2      	; 0x372 <__mulsf3+0x12>
 370:	5a c0       	rjmp	.+180    	; 0x426 <__fp_inf>
 372:	5f c0       	rjmp	.+190    	; 0x432 <__fp_nan>
 374:	11 24       	eor	r1, r1
 376:	ee cf       	rjmp	.-36     	; 0x354 <__fp_szero>

00000378 <__mulsf3x>:
 378:	ca df       	rcall	.-108    	; 0x30e <__fp_split3>
 37a:	a0 f3       	brcs	.-24     	; 0x364 <__mulsf3+0x4>

0000037c <__mulsf3_pse>:
 37c:	95 9f       	mul	r25, r21
 37e:	d1 f3       	breq	.-12     	; 0x374 <__mulsf3+0x14>
 380:	95 0f       	add	r25, r21
 382:	50 e0       	ldi	r21, 0x00	; 0
 384:	55 1f       	adc	r21, r21
 386:	62 9f       	mul	r22, r18
 388:	f0 01       	movw	r30, r0
 38a:	72 9f       	mul	r23, r18
 38c:	bb 27       	eor	r27, r27
 38e:	f0 0d       	add	r31, r0
 390:	b1 1d       	adc	r27, r1
 392:	63 9f       	mul	r22, r19
 394:	aa 27       	eor	r26, r26
 396:	f0 0d       	add	r31, r0
 398:	b1 1d       	adc	r27, r1
 39a:	aa 1f       	adc	r26, r26
 39c:	64 9f       	mul	r22, r20
 39e:	66 27       	eor	r22, r22
 3a0:	b0 0d       	add	r27, r0
 3a2:	a1 1d       	adc	r26, r1
 3a4:	66 1f       	adc	r22, r22
 3a6:	82 9f       	mul	r24, r18
 3a8:	22 27       	eor	r18, r18
 3aa:	b0 0d       	add	r27, r0
 3ac:	a1 1d       	adc	r26, r1
 3ae:	62 1f       	adc	r22, r18
 3b0:	73 9f       	mul	r23, r19
 3b2:	b0 0d       	add	r27, r0
 3b4:	a1 1d       	adc	r26, r1
 3b6:	62 1f       	adc	r22, r18
 3b8:	83 9f       	mul	r24, r19
 3ba:	a0 0d       	add	r26, r0
 3bc:	61 1d       	adc	r22, r1
 3be:	22 1f       	adc	r18, r18
 3c0:	74 9f       	mul	r23, r20
 3c2:	33 27       	eor	r19, r19
 3c4:	a0 0d       	add	r26, r0
 3c6:	61 1d       	adc	r22, r1
 3c8:	23 1f       	adc	r18, r19
 3ca:	84 9f       	mul	r24, r20
 3cc:	60 0d       	add	r22, r0
 3ce:	21 1d       	adc	r18, r1
 3d0:	82 2f       	mov	r24, r18
 3d2:	76 2f       	mov	r23, r22
 3d4:	6a 2f       	mov	r22, r26
 3d6:	11 24       	eor	r1, r1
 3d8:	9f 57       	subi	r25, 0x7F	; 127
 3da:	50 40       	sbci	r21, 0x00	; 0
 3dc:	8a f0       	brmi	.+34     	; 0x400 <__mulsf3_pse+0x84>
 3de:	e1 f0       	breq	.+56     	; 0x418 <__mulsf3_pse+0x9c>
 3e0:	88 23       	and	r24, r24
 3e2:	4a f0       	brmi	.+18     	; 0x3f6 <__mulsf3_pse+0x7a>
 3e4:	ee 0f       	add	r30, r30
 3e6:	ff 1f       	adc	r31, r31
 3e8:	bb 1f       	adc	r27, r27
 3ea:	66 1f       	adc	r22, r22
 3ec:	77 1f       	adc	r23, r23
 3ee:	88 1f       	adc	r24, r24
 3f0:	91 50       	subi	r25, 0x01	; 1
 3f2:	50 40       	sbci	r21, 0x00	; 0
 3f4:	a9 f7       	brne	.-22     	; 0x3e0 <__mulsf3_pse+0x64>
 3f6:	9e 3f       	cpi	r25, 0xFE	; 254
 3f8:	51 05       	cpc	r21, r1
 3fa:	70 f0       	brcs	.+28     	; 0x418 <__mulsf3_pse+0x9c>
 3fc:	14 c0       	rjmp	.+40     	; 0x426 <__fp_inf>
 3fe:	aa cf       	rjmp	.-172    	; 0x354 <__fp_szero>
 400:	5f 3f       	cpi	r21, 0xFF	; 255
 402:	ec f3       	brlt	.-6      	; 0x3fe <__mulsf3_pse+0x82>
 404:	98 3e       	cpi	r25, 0xE8	; 232
 406:	dc f3       	brlt	.-10     	; 0x3fe <__mulsf3_pse+0x82>
 408:	86 95       	lsr	r24
 40a:	77 95       	ror	r23
 40c:	67 95       	ror	r22
 40e:	b7 95       	ror	r27
 410:	f7 95       	ror	r31
 412:	e7 95       	ror	r30
 414:	9f 5f       	subi	r25, 0xFF	; 255
 416:	c1 f7       	brne	.-16     	; 0x408 <__mulsf3_pse+0x8c>
 418:	fe 2b       	or	r31, r30
 41a:	88 0f       	add	r24, r24
 41c:	91 1d       	adc	r25, r1
 41e:	96 95       	lsr	r25
 420:	87 95       	ror	r24
 422:	97 f9       	bld	r25, 7
 424:	08 95       	ret

00000426 <__fp_inf>:
 426:	97 f9       	bld	r25, 7
 428:	9f 67       	ori	r25, 0x7F	; 127
 42a:	80 e8       	ldi	r24, 0x80	; 128
 42c:	70 e0       	ldi	r23, 0x00	; 0
 42e:	60 e0       	ldi	r22, 0x00	; 0
 430:	08 95       	ret

00000432 <__fp_nan>:
 432:	9f ef       	ldi	r25, 0xFF	; 255
 434:	80 ec       	ldi	r24, 0xC0	; 192
 436:	08 95       	ret

00000438 <__fp_pscA>:
 438:	00 24       	eor	r0, r0
 43a:	0a 94       	dec	r0
 43c:	16 16       	cp	r1, r22
 43e:	17 06       	cpc	r1, r23
 440:	18 06       	cpc	r1, r24
 442:	09 06       	cpc	r0, r25
 444:	08 95       	ret

00000446 <__fp_pscB>:
 446:	00 24       	eor	r0, r0
 448:	0a 94       	dec	r0
 44a:	12 16       	cp	r1, r18
 44c:	13 06       	cpc	r1, r19
 44e:	14 06       	cpc	r1, r20
 450:	05 06       	cpc	r0, r21
 452:	08 95       	ret

00000454 <__fp_round>:
 454:	09 2e       	mov	r0, r25
 456:	03 94       	inc	r0
 458:	00 0c       	add	r0, r0
 45a:	11 f4       	brne	.+4      	; 0x460 <__fp_round+0xc>
 45c:	88 23       	and	r24, r24
 45e:	52 f0       	brmi	.+20     	; 0x474 <__fp_round+0x20>
 460:	bb 0f       	add	r27, r27
 462:	40 f4       	brcc	.+16     	; 0x474 <__fp_round+0x20>
 464:	bf 2b       	or	r27, r31
 466:	11 f4       	brne	.+4      	; 0x46c <__fp_round+0x18>
 468:	60 ff       	sbrs	r22, 0
 46a:	04 c0       	rjmp	.+8      	; 0x474 <__fp_round+0x20>
 46c:	6f 5f       	subi	r22, 0xFF	; 255
 46e:	7f 4f       	sbci	r23, 0xFF	; 255
 470:	8f 4f       	sbci	r24, 0xFF	; 255
 472:	9f 4f       	sbci	r25, 0xFF	; 255
 474:	08 95       	ret

00000476 <printf>:
 476:	cf 93       	push	r28
 478:	df 93       	push	r29
 47a:	cd b7       	in	r28, 0x3d	; 61
 47c:	de b7       	in	r29, 0x3e	; 62
 47e:	ae 01       	movw	r20, r28
 480:	4a 5f       	subi	r20, 0xFA	; 250
 482:	5f 4f       	sbci	r21, 0xFF	; 255
 484:	fa 01       	movw	r30, r20
 486:	61 91       	ld	r22, Z+
 488:	71 91       	ld	r23, Z+
 48a:	af 01       	movw	r20, r30
 48c:	80 91 9f 02 	lds	r24, 0x029F
 490:	90 91 a0 02 	lds	r25, 0x02A0
 494:	03 d0       	rcall	.+6      	; 0x49c <vfprintf>
 496:	df 91       	pop	r29
 498:	cf 91       	pop	r28
 49a:	08 95       	ret

0000049c <vfprintf>:
 49c:	2f 92       	push	r2
 49e:	3f 92       	push	r3
 4a0:	4f 92       	push	r4
 4a2:	5f 92       	push	r5
 4a4:	6f 92       	push	r6
 4a6:	7f 92       	push	r7
 4a8:	8f 92       	push	r8
 4aa:	9f 92       	push	r9
 4ac:	af 92       	push	r10
 4ae:	bf 92       	push	r11
 4b0:	cf 92       	push	r12
 4b2:	df 92       	push	r13
 4b4:	ef 92       	push	r14
 4b6:	ff 92       	push	r15
 4b8:	0f 93       	push	r16
 4ba:	1f 93       	push	r17
 4bc:	cf 93       	push	r28
 4be:	df 93       	push	r29
 4c0:	cd b7       	in	r28, 0x3d	; 61
 4c2:	de b7       	in	r29, 0x3e	; 62
 4c4:	2c 97       	sbiw	r28, 0x0c	; 12
 4c6:	0f b6       	in	r0, 0x3f	; 63
 4c8:	f8 94       	cli
 4ca:	de bf       	out	0x3e, r29	; 62
 4cc:	0f be       	out	0x3f, r0	; 63
 4ce:	cd bf       	out	0x3d, r28	; 61
 4d0:	7c 01       	movw	r14, r24
 4d2:	6b 01       	movw	r12, r22
 4d4:	8a 01       	movw	r16, r20
 4d6:	fc 01       	movw	r30, r24
 4d8:	17 82       	std	Z+7, r1	; 0x07
 4da:	16 82       	std	Z+6, r1	; 0x06
 4dc:	83 81       	ldd	r24, Z+3	; 0x03
 4de:	81 ff       	sbrs	r24, 1
 4e0:	b0 c1       	rjmp	.+864    	; 0x842 <vfprintf+0x3a6>
 4e2:	ce 01       	movw	r24, r28
 4e4:	01 96       	adiw	r24, 0x01	; 1
 4e6:	4c 01       	movw	r8, r24
 4e8:	f7 01       	movw	r30, r14
 4ea:	93 81       	ldd	r25, Z+3	; 0x03
 4ec:	f6 01       	movw	r30, r12
 4ee:	93 fd       	sbrc	r25, 3
 4f0:	85 91       	lpm	r24, Z+
 4f2:	93 ff       	sbrs	r25, 3
 4f4:	81 91       	ld	r24, Z+
 4f6:	6f 01       	movw	r12, r30
 4f8:	88 23       	and	r24, r24
 4fa:	09 f4       	brne	.+2      	; 0x4fe <vfprintf+0x62>
 4fc:	9e c1       	rjmp	.+828    	; 0x83a <vfprintf+0x39e>
 4fe:	85 32       	cpi	r24, 0x25	; 37
 500:	39 f4       	brne	.+14     	; 0x510 <vfprintf+0x74>
 502:	93 fd       	sbrc	r25, 3
 504:	85 91       	lpm	r24, Z+
 506:	93 ff       	sbrs	r25, 3
 508:	81 91       	ld	r24, Z+
 50a:	6f 01       	movw	r12, r30
 50c:	85 32       	cpi	r24, 0x25	; 37
 50e:	21 f4       	brne	.+8      	; 0x518 <vfprintf+0x7c>
 510:	b7 01       	movw	r22, r14
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	c7 d1       	rcall	.+910    	; 0x8a4 <fputc>
 516:	e8 cf       	rjmp	.-48     	; 0x4e8 <vfprintf+0x4c>
 518:	51 2c       	mov	r5, r1
 51a:	31 2c       	mov	r3, r1
 51c:	20 e0       	ldi	r18, 0x00	; 0
 51e:	20 32       	cpi	r18, 0x20	; 32
 520:	a0 f4       	brcc	.+40     	; 0x54a <vfprintf+0xae>
 522:	8b 32       	cpi	r24, 0x2B	; 43
 524:	69 f0       	breq	.+26     	; 0x540 <vfprintf+0xa4>
 526:	30 f4       	brcc	.+12     	; 0x534 <vfprintf+0x98>
 528:	80 32       	cpi	r24, 0x20	; 32
 52a:	59 f0       	breq	.+22     	; 0x542 <vfprintf+0xa6>
 52c:	83 32       	cpi	r24, 0x23	; 35
 52e:	69 f4       	brne	.+26     	; 0x54a <vfprintf+0xae>
 530:	20 61       	ori	r18, 0x10	; 16
 532:	2c c0       	rjmp	.+88     	; 0x58c <vfprintf+0xf0>
 534:	8d 32       	cpi	r24, 0x2D	; 45
 536:	39 f0       	breq	.+14     	; 0x546 <vfprintf+0xaa>
 538:	80 33       	cpi	r24, 0x30	; 48
 53a:	39 f4       	brne	.+14     	; 0x54a <vfprintf+0xae>
 53c:	21 60       	ori	r18, 0x01	; 1
 53e:	26 c0       	rjmp	.+76     	; 0x58c <vfprintf+0xf0>
 540:	22 60       	ori	r18, 0x02	; 2
 542:	24 60       	ori	r18, 0x04	; 4
 544:	23 c0       	rjmp	.+70     	; 0x58c <vfprintf+0xf0>
 546:	28 60       	ori	r18, 0x08	; 8
 548:	21 c0       	rjmp	.+66     	; 0x58c <vfprintf+0xf0>
 54a:	27 fd       	sbrc	r18, 7
 54c:	27 c0       	rjmp	.+78     	; 0x59c <vfprintf+0x100>
 54e:	30 ed       	ldi	r19, 0xD0	; 208
 550:	38 0f       	add	r19, r24
 552:	3a 30       	cpi	r19, 0x0A	; 10
 554:	78 f4       	brcc	.+30     	; 0x574 <vfprintf+0xd8>
 556:	26 ff       	sbrs	r18, 6
 558:	06 c0       	rjmp	.+12     	; 0x566 <vfprintf+0xca>
 55a:	fa e0       	ldi	r31, 0x0A	; 10
 55c:	5f 9e       	mul	r5, r31
 55e:	30 0d       	add	r19, r0
 560:	11 24       	eor	r1, r1
 562:	53 2e       	mov	r5, r19
 564:	13 c0       	rjmp	.+38     	; 0x58c <vfprintf+0xf0>
 566:	8a e0       	ldi	r24, 0x0A	; 10
 568:	38 9e       	mul	r3, r24
 56a:	30 0d       	add	r19, r0
 56c:	11 24       	eor	r1, r1
 56e:	33 2e       	mov	r3, r19
 570:	20 62       	ori	r18, 0x20	; 32
 572:	0c c0       	rjmp	.+24     	; 0x58c <vfprintf+0xf0>
 574:	8e 32       	cpi	r24, 0x2E	; 46
 576:	21 f4       	brne	.+8      	; 0x580 <vfprintf+0xe4>
 578:	26 fd       	sbrc	r18, 6
 57a:	5f c1       	rjmp	.+702    	; 0x83a <vfprintf+0x39e>
 57c:	20 64       	ori	r18, 0x40	; 64
 57e:	06 c0       	rjmp	.+12     	; 0x58c <vfprintf+0xf0>
 580:	8c 36       	cpi	r24, 0x6C	; 108
 582:	11 f4       	brne	.+4      	; 0x588 <vfprintf+0xec>
 584:	20 68       	ori	r18, 0x80	; 128
 586:	02 c0       	rjmp	.+4      	; 0x58c <vfprintf+0xf0>
 588:	88 36       	cpi	r24, 0x68	; 104
 58a:	41 f4       	brne	.+16     	; 0x59c <vfprintf+0x100>
 58c:	f6 01       	movw	r30, r12
 58e:	93 fd       	sbrc	r25, 3
 590:	85 91       	lpm	r24, Z+
 592:	93 ff       	sbrs	r25, 3
 594:	81 91       	ld	r24, Z+
 596:	6f 01       	movw	r12, r30
 598:	81 11       	cpse	r24, r1
 59a:	c1 cf       	rjmp	.-126    	; 0x51e <vfprintf+0x82>
 59c:	98 2f       	mov	r25, r24
 59e:	9f 7d       	andi	r25, 0xDF	; 223
 5a0:	95 54       	subi	r25, 0x45	; 69
 5a2:	93 30       	cpi	r25, 0x03	; 3
 5a4:	28 f4       	brcc	.+10     	; 0x5b0 <vfprintf+0x114>
 5a6:	0c 5f       	subi	r16, 0xFC	; 252
 5a8:	1f 4f       	sbci	r17, 0xFF	; 255
 5aa:	ff e3       	ldi	r31, 0x3F	; 63
 5ac:	f9 83       	std	Y+1, r31	; 0x01
 5ae:	0d c0       	rjmp	.+26     	; 0x5ca <vfprintf+0x12e>
 5b0:	83 36       	cpi	r24, 0x63	; 99
 5b2:	31 f0       	breq	.+12     	; 0x5c0 <vfprintf+0x124>
 5b4:	83 37       	cpi	r24, 0x73	; 115
 5b6:	71 f0       	breq	.+28     	; 0x5d4 <vfprintf+0x138>
 5b8:	83 35       	cpi	r24, 0x53	; 83
 5ba:	09 f0       	breq	.+2      	; 0x5be <vfprintf+0x122>
 5bc:	57 c0       	rjmp	.+174    	; 0x66c <vfprintf+0x1d0>
 5be:	21 c0       	rjmp	.+66     	; 0x602 <vfprintf+0x166>
 5c0:	f8 01       	movw	r30, r16
 5c2:	80 81       	ld	r24, Z
 5c4:	89 83       	std	Y+1, r24	; 0x01
 5c6:	0e 5f       	subi	r16, 0xFE	; 254
 5c8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ca:	44 24       	eor	r4, r4
 5cc:	43 94       	inc	r4
 5ce:	51 2c       	mov	r5, r1
 5d0:	54 01       	movw	r10, r8
 5d2:	14 c0       	rjmp	.+40     	; 0x5fc <vfprintf+0x160>
 5d4:	38 01       	movw	r6, r16
 5d6:	f2 e0       	ldi	r31, 0x02	; 2
 5d8:	6f 0e       	add	r6, r31
 5da:	71 1c       	adc	r7, r1
 5dc:	f8 01       	movw	r30, r16
 5de:	a0 80       	ld	r10, Z
 5e0:	b1 80       	ldd	r11, Z+1	; 0x01
 5e2:	26 ff       	sbrs	r18, 6
 5e4:	03 c0       	rjmp	.+6      	; 0x5ec <vfprintf+0x150>
 5e6:	65 2d       	mov	r22, r5
 5e8:	70 e0       	ldi	r23, 0x00	; 0
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <vfprintf+0x154>
 5ec:	6f ef       	ldi	r22, 0xFF	; 255
 5ee:	7f ef       	ldi	r23, 0xFF	; 255
 5f0:	c5 01       	movw	r24, r10
 5f2:	2c 87       	std	Y+12, r18	; 0x0c
 5f4:	4c d1       	rcall	.+664    	; 0x88e <strnlen>
 5f6:	2c 01       	movw	r4, r24
 5f8:	83 01       	movw	r16, r6
 5fa:	2c 85       	ldd	r18, Y+12	; 0x0c
 5fc:	2f 77       	andi	r18, 0x7F	; 127
 5fe:	22 2e       	mov	r2, r18
 600:	16 c0       	rjmp	.+44     	; 0x62e <vfprintf+0x192>
 602:	38 01       	movw	r6, r16
 604:	f2 e0       	ldi	r31, 0x02	; 2
 606:	6f 0e       	add	r6, r31
 608:	71 1c       	adc	r7, r1
 60a:	f8 01       	movw	r30, r16
 60c:	a0 80       	ld	r10, Z
 60e:	b1 80       	ldd	r11, Z+1	; 0x01
 610:	26 ff       	sbrs	r18, 6
 612:	03 c0       	rjmp	.+6      	; 0x61a <vfprintf+0x17e>
 614:	65 2d       	mov	r22, r5
 616:	70 e0       	ldi	r23, 0x00	; 0
 618:	02 c0       	rjmp	.+4      	; 0x61e <vfprintf+0x182>
 61a:	6f ef       	ldi	r22, 0xFF	; 255
 61c:	7f ef       	ldi	r23, 0xFF	; 255
 61e:	c5 01       	movw	r24, r10
 620:	2c 87       	std	Y+12, r18	; 0x0c
 622:	2a d1       	rcall	.+596    	; 0x878 <strnlen_P>
 624:	2c 01       	movw	r4, r24
 626:	2c 85       	ldd	r18, Y+12	; 0x0c
 628:	20 68       	ori	r18, 0x80	; 128
 62a:	22 2e       	mov	r2, r18
 62c:	83 01       	movw	r16, r6
 62e:	23 fc       	sbrc	r2, 3
 630:	19 c0       	rjmp	.+50     	; 0x664 <vfprintf+0x1c8>
 632:	83 2d       	mov	r24, r3
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	48 16       	cp	r4, r24
 638:	59 06       	cpc	r5, r25
 63a:	a0 f4       	brcc	.+40     	; 0x664 <vfprintf+0x1c8>
 63c:	b7 01       	movw	r22, r14
 63e:	80 e2       	ldi	r24, 0x20	; 32
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	30 d1       	rcall	.+608    	; 0x8a4 <fputc>
 644:	3a 94       	dec	r3
 646:	f5 cf       	rjmp	.-22     	; 0x632 <vfprintf+0x196>
 648:	f5 01       	movw	r30, r10
 64a:	27 fc       	sbrc	r2, 7
 64c:	85 91       	lpm	r24, Z+
 64e:	27 fe       	sbrs	r2, 7
 650:	81 91       	ld	r24, Z+
 652:	5f 01       	movw	r10, r30
 654:	b7 01       	movw	r22, r14
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	25 d1       	rcall	.+586    	; 0x8a4 <fputc>
 65a:	31 10       	cpse	r3, r1
 65c:	3a 94       	dec	r3
 65e:	f1 e0       	ldi	r31, 0x01	; 1
 660:	4f 1a       	sub	r4, r31
 662:	51 08       	sbc	r5, r1
 664:	41 14       	cp	r4, r1
 666:	51 04       	cpc	r5, r1
 668:	79 f7       	brne	.-34     	; 0x648 <vfprintf+0x1ac>
 66a:	de c0       	rjmp	.+444    	; 0x828 <vfprintf+0x38c>
 66c:	84 36       	cpi	r24, 0x64	; 100
 66e:	11 f0       	breq	.+4      	; 0x674 <vfprintf+0x1d8>
 670:	89 36       	cpi	r24, 0x69	; 105
 672:	31 f5       	brne	.+76     	; 0x6c0 <vfprintf+0x224>
 674:	f8 01       	movw	r30, r16
 676:	27 ff       	sbrs	r18, 7
 678:	07 c0       	rjmp	.+14     	; 0x688 <vfprintf+0x1ec>
 67a:	60 81       	ld	r22, Z
 67c:	71 81       	ldd	r23, Z+1	; 0x01
 67e:	82 81       	ldd	r24, Z+2	; 0x02
 680:	93 81       	ldd	r25, Z+3	; 0x03
 682:	0c 5f       	subi	r16, 0xFC	; 252
 684:	1f 4f       	sbci	r17, 0xFF	; 255
 686:	08 c0       	rjmp	.+16     	; 0x698 <vfprintf+0x1fc>
 688:	60 81       	ld	r22, Z
 68a:	71 81       	ldd	r23, Z+1	; 0x01
 68c:	07 2e       	mov	r0, r23
 68e:	00 0c       	add	r0, r0
 690:	88 0b       	sbc	r24, r24
 692:	99 0b       	sbc	r25, r25
 694:	0e 5f       	subi	r16, 0xFE	; 254
 696:	1f 4f       	sbci	r17, 0xFF	; 255
 698:	2f 76       	andi	r18, 0x6F	; 111
 69a:	72 2e       	mov	r7, r18
 69c:	97 ff       	sbrs	r25, 7
 69e:	09 c0       	rjmp	.+18     	; 0x6b2 <vfprintf+0x216>
 6a0:	90 95       	com	r25
 6a2:	80 95       	com	r24
 6a4:	70 95       	com	r23
 6a6:	61 95       	neg	r22
 6a8:	7f 4f       	sbci	r23, 0xFF	; 255
 6aa:	8f 4f       	sbci	r24, 0xFF	; 255
 6ac:	9f 4f       	sbci	r25, 0xFF	; 255
 6ae:	20 68       	ori	r18, 0x80	; 128
 6b0:	72 2e       	mov	r7, r18
 6b2:	2a e0       	ldi	r18, 0x0A	; 10
 6b4:	30 e0       	ldi	r19, 0x00	; 0
 6b6:	a4 01       	movw	r20, r8
 6b8:	2d d1       	rcall	.+602    	; 0x914 <__ultoa_invert>
 6ba:	a8 2e       	mov	r10, r24
 6bc:	a8 18       	sub	r10, r8
 6be:	43 c0       	rjmp	.+134    	; 0x746 <vfprintf+0x2aa>
 6c0:	85 37       	cpi	r24, 0x75	; 117
 6c2:	29 f4       	brne	.+10     	; 0x6ce <vfprintf+0x232>
 6c4:	2f 7e       	andi	r18, 0xEF	; 239
 6c6:	b2 2e       	mov	r11, r18
 6c8:	2a e0       	ldi	r18, 0x0A	; 10
 6ca:	30 e0       	ldi	r19, 0x00	; 0
 6cc:	25 c0       	rjmp	.+74     	; 0x718 <vfprintf+0x27c>
 6ce:	f2 2f       	mov	r31, r18
 6d0:	f9 7f       	andi	r31, 0xF9	; 249
 6d2:	bf 2e       	mov	r11, r31
 6d4:	8f 36       	cpi	r24, 0x6F	; 111
 6d6:	c1 f0       	breq	.+48     	; 0x708 <vfprintf+0x26c>
 6d8:	18 f4       	brcc	.+6      	; 0x6e0 <vfprintf+0x244>
 6da:	88 35       	cpi	r24, 0x58	; 88
 6dc:	79 f0       	breq	.+30     	; 0x6fc <vfprintf+0x260>
 6de:	ad c0       	rjmp	.+346    	; 0x83a <vfprintf+0x39e>
 6e0:	80 37       	cpi	r24, 0x70	; 112
 6e2:	19 f0       	breq	.+6      	; 0x6ea <vfprintf+0x24e>
 6e4:	88 37       	cpi	r24, 0x78	; 120
 6e6:	21 f0       	breq	.+8      	; 0x6f0 <vfprintf+0x254>
 6e8:	a8 c0       	rjmp	.+336    	; 0x83a <vfprintf+0x39e>
 6ea:	2f 2f       	mov	r18, r31
 6ec:	20 61       	ori	r18, 0x10	; 16
 6ee:	b2 2e       	mov	r11, r18
 6f0:	b4 fe       	sbrs	r11, 4
 6f2:	0d c0       	rjmp	.+26     	; 0x70e <vfprintf+0x272>
 6f4:	8b 2d       	mov	r24, r11
 6f6:	84 60       	ori	r24, 0x04	; 4
 6f8:	b8 2e       	mov	r11, r24
 6fa:	09 c0       	rjmp	.+18     	; 0x70e <vfprintf+0x272>
 6fc:	24 ff       	sbrs	r18, 4
 6fe:	0a c0       	rjmp	.+20     	; 0x714 <vfprintf+0x278>
 700:	9f 2f       	mov	r25, r31
 702:	96 60       	ori	r25, 0x06	; 6
 704:	b9 2e       	mov	r11, r25
 706:	06 c0       	rjmp	.+12     	; 0x714 <vfprintf+0x278>
 708:	28 e0       	ldi	r18, 0x08	; 8
 70a:	30 e0       	ldi	r19, 0x00	; 0
 70c:	05 c0       	rjmp	.+10     	; 0x718 <vfprintf+0x27c>
 70e:	20 e1       	ldi	r18, 0x10	; 16
 710:	30 e0       	ldi	r19, 0x00	; 0
 712:	02 c0       	rjmp	.+4      	; 0x718 <vfprintf+0x27c>
 714:	20 e1       	ldi	r18, 0x10	; 16
 716:	32 e0       	ldi	r19, 0x02	; 2
 718:	f8 01       	movw	r30, r16
 71a:	b7 fe       	sbrs	r11, 7
 71c:	07 c0       	rjmp	.+14     	; 0x72c <vfprintf+0x290>
 71e:	60 81       	ld	r22, Z
 720:	71 81       	ldd	r23, Z+1	; 0x01
 722:	82 81       	ldd	r24, Z+2	; 0x02
 724:	93 81       	ldd	r25, Z+3	; 0x03
 726:	0c 5f       	subi	r16, 0xFC	; 252
 728:	1f 4f       	sbci	r17, 0xFF	; 255
 72a:	06 c0       	rjmp	.+12     	; 0x738 <vfprintf+0x29c>
 72c:	60 81       	ld	r22, Z
 72e:	71 81       	ldd	r23, Z+1	; 0x01
 730:	80 e0       	ldi	r24, 0x00	; 0
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0e 5f       	subi	r16, 0xFE	; 254
 736:	1f 4f       	sbci	r17, 0xFF	; 255
 738:	a4 01       	movw	r20, r8
 73a:	ec d0       	rcall	.+472    	; 0x914 <__ultoa_invert>
 73c:	a8 2e       	mov	r10, r24
 73e:	a8 18       	sub	r10, r8
 740:	fb 2d       	mov	r31, r11
 742:	ff 77       	andi	r31, 0x7F	; 127
 744:	7f 2e       	mov	r7, r31
 746:	76 fe       	sbrs	r7, 6
 748:	0b c0       	rjmp	.+22     	; 0x760 <vfprintf+0x2c4>
 74a:	37 2d       	mov	r19, r7
 74c:	3e 7f       	andi	r19, 0xFE	; 254
 74e:	a5 14       	cp	r10, r5
 750:	50 f4       	brcc	.+20     	; 0x766 <vfprintf+0x2ca>
 752:	74 fe       	sbrs	r7, 4
 754:	0a c0       	rjmp	.+20     	; 0x76a <vfprintf+0x2ce>
 756:	72 fc       	sbrc	r7, 2
 758:	08 c0       	rjmp	.+16     	; 0x76a <vfprintf+0x2ce>
 75a:	37 2d       	mov	r19, r7
 75c:	3e 7e       	andi	r19, 0xEE	; 238
 75e:	05 c0       	rjmp	.+10     	; 0x76a <vfprintf+0x2ce>
 760:	ba 2c       	mov	r11, r10
 762:	37 2d       	mov	r19, r7
 764:	03 c0       	rjmp	.+6      	; 0x76c <vfprintf+0x2d0>
 766:	ba 2c       	mov	r11, r10
 768:	01 c0       	rjmp	.+2      	; 0x76c <vfprintf+0x2d0>
 76a:	b5 2c       	mov	r11, r5
 76c:	34 ff       	sbrs	r19, 4
 76e:	0d c0       	rjmp	.+26     	; 0x78a <vfprintf+0x2ee>
 770:	fe 01       	movw	r30, r28
 772:	ea 0d       	add	r30, r10
 774:	f1 1d       	adc	r31, r1
 776:	80 81       	ld	r24, Z
 778:	80 33       	cpi	r24, 0x30	; 48
 77a:	11 f4       	brne	.+4      	; 0x780 <vfprintf+0x2e4>
 77c:	39 7e       	andi	r19, 0xE9	; 233
 77e:	09 c0       	rjmp	.+18     	; 0x792 <vfprintf+0x2f6>
 780:	32 ff       	sbrs	r19, 2
 782:	06 c0       	rjmp	.+12     	; 0x790 <vfprintf+0x2f4>
 784:	b3 94       	inc	r11
 786:	b3 94       	inc	r11
 788:	04 c0       	rjmp	.+8      	; 0x792 <vfprintf+0x2f6>
 78a:	83 2f       	mov	r24, r19
 78c:	86 78       	andi	r24, 0x86	; 134
 78e:	09 f0       	breq	.+2      	; 0x792 <vfprintf+0x2f6>
 790:	b3 94       	inc	r11
 792:	33 fd       	sbrc	r19, 3
 794:	12 c0       	rjmp	.+36     	; 0x7ba <vfprintf+0x31e>
 796:	30 ff       	sbrs	r19, 0
 798:	06 c0       	rjmp	.+12     	; 0x7a6 <vfprintf+0x30a>
 79a:	5a 2c       	mov	r5, r10
 79c:	b3 14       	cp	r11, r3
 79e:	18 f4       	brcc	.+6      	; 0x7a6 <vfprintf+0x30a>
 7a0:	53 0c       	add	r5, r3
 7a2:	5b 18       	sub	r5, r11
 7a4:	b3 2c       	mov	r11, r3
 7a6:	b3 14       	cp	r11, r3
 7a8:	60 f4       	brcc	.+24     	; 0x7c2 <vfprintf+0x326>
 7aa:	b7 01       	movw	r22, r14
 7ac:	80 e2       	ldi	r24, 0x20	; 32
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	3c 87       	std	Y+12, r19	; 0x0c
 7b2:	78 d0       	rcall	.+240    	; 0x8a4 <fputc>
 7b4:	b3 94       	inc	r11
 7b6:	3c 85       	ldd	r19, Y+12	; 0x0c
 7b8:	f6 cf       	rjmp	.-20     	; 0x7a6 <vfprintf+0x30a>
 7ba:	b3 14       	cp	r11, r3
 7bc:	10 f4       	brcc	.+4      	; 0x7c2 <vfprintf+0x326>
 7be:	3b 18       	sub	r3, r11
 7c0:	01 c0       	rjmp	.+2      	; 0x7c4 <vfprintf+0x328>
 7c2:	31 2c       	mov	r3, r1
 7c4:	34 ff       	sbrs	r19, 4
 7c6:	11 c0       	rjmp	.+34     	; 0x7ea <vfprintf+0x34e>
 7c8:	b7 01       	movw	r22, r14
 7ca:	80 e3       	ldi	r24, 0x30	; 48
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	3c 87       	std	Y+12, r19	; 0x0c
 7d0:	69 d0       	rcall	.+210    	; 0x8a4 <fputc>
 7d2:	3c 85       	ldd	r19, Y+12	; 0x0c
 7d4:	32 ff       	sbrs	r19, 2
 7d6:	16 c0       	rjmp	.+44     	; 0x804 <vfprintf+0x368>
 7d8:	31 fd       	sbrc	r19, 1
 7da:	03 c0       	rjmp	.+6      	; 0x7e2 <vfprintf+0x346>
 7dc:	88 e7       	ldi	r24, 0x78	; 120
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <vfprintf+0x34a>
 7e2:	88 e5       	ldi	r24, 0x58	; 88
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	b7 01       	movw	r22, r14
 7e8:	0c c0       	rjmp	.+24     	; 0x802 <vfprintf+0x366>
 7ea:	83 2f       	mov	r24, r19
 7ec:	86 78       	andi	r24, 0x86	; 134
 7ee:	51 f0       	breq	.+20     	; 0x804 <vfprintf+0x368>
 7f0:	31 ff       	sbrs	r19, 1
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <vfprintf+0x35c>
 7f4:	8b e2       	ldi	r24, 0x2B	; 43
 7f6:	01 c0       	rjmp	.+2      	; 0x7fa <vfprintf+0x35e>
 7f8:	80 e2       	ldi	r24, 0x20	; 32
 7fa:	37 fd       	sbrc	r19, 7
 7fc:	8d e2       	ldi	r24, 0x2D	; 45
 7fe:	b7 01       	movw	r22, r14
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	50 d0       	rcall	.+160    	; 0x8a4 <fputc>
 804:	a5 14       	cp	r10, r5
 806:	30 f4       	brcc	.+12     	; 0x814 <vfprintf+0x378>
 808:	b7 01       	movw	r22, r14
 80a:	80 e3       	ldi	r24, 0x30	; 48
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	4a d0       	rcall	.+148    	; 0x8a4 <fputc>
 810:	5a 94       	dec	r5
 812:	f8 cf       	rjmp	.-16     	; 0x804 <vfprintf+0x368>
 814:	aa 94       	dec	r10
 816:	f4 01       	movw	r30, r8
 818:	ea 0d       	add	r30, r10
 81a:	f1 1d       	adc	r31, r1
 81c:	80 81       	ld	r24, Z
 81e:	b7 01       	movw	r22, r14
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	40 d0       	rcall	.+128    	; 0x8a4 <fputc>
 824:	a1 10       	cpse	r10, r1
 826:	f6 cf       	rjmp	.-20     	; 0x814 <vfprintf+0x378>
 828:	33 20       	and	r3, r3
 82a:	09 f4       	brne	.+2      	; 0x82e <vfprintf+0x392>
 82c:	5d ce       	rjmp	.-838    	; 0x4e8 <vfprintf+0x4c>
 82e:	b7 01       	movw	r22, r14
 830:	80 e2       	ldi	r24, 0x20	; 32
 832:	90 e0       	ldi	r25, 0x00	; 0
 834:	37 d0       	rcall	.+110    	; 0x8a4 <fputc>
 836:	3a 94       	dec	r3
 838:	f7 cf       	rjmp	.-18     	; 0x828 <vfprintf+0x38c>
 83a:	f7 01       	movw	r30, r14
 83c:	86 81       	ldd	r24, Z+6	; 0x06
 83e:	97 81       	ldd	r25, Z+7	; 0x07
 840:	02 c0       	rjmp	.+4      	; 0x846 <vfprintf+0x3aa>
 842:	8f ef       	ldi	r24, 0xFF	; 255
 844:	9f ef       	ldi	r25, 0xFF	; 255
 846:	2c 96       	adiw	r28, 0x0c	; 12
 848:	0f b6       	in	r0, 0x3f	; 63
 84a:	f8 94       	cli
 84c:	de bf       	out	0x3e, r29	; 62
 84e:	0f be       	out	0x3f, r0	; 63
 850:	cd bf       	out	0x3d, r28	; 61
 852:	df 91       	pop	r29
 854:	cf 91       	pop	r28
 856:	1f 91       	pop	r17
 858:	0f 91       	pop	r16
 85a:	ff 90       	pop	r15
 85c:	ef 90       	pop	r14
 85e:	df 90       	pop	r13
 860:	cf 90       	pop	r12
 862:	bf 90       	pop	r11
 864:	af 90       	pop	r10
 866:	9f 90       	pop	r9
 868:	8f 90       	pop	r8
 86a:	7f 90       	pop	r7
 86c:	6f 90       	pop	r6
 86e:	5f 90       	pop	r5
 870:	4f 90       	pop	r4
 872:	3f 90       	pop	r3
 874:	2f 90       	pop	r2
 876:	08 95       	ret

00000878 <strnlen_P>:
 878:	fc 01       	movw	r30, r24
 87a:	05 90       	lpm	r0, Z+
 87c:	61 50       	subi	r22, 0x01	; 1
 87e:	70 40       	sbci	r23, 0x00	; 0
 880:	01 10       	cpse	r0, r1
 882:	d8 f7       	brcc	.-10     	; 0x87a <strnlen_P+0x2>
 884:	80 95       	com	r24
 886:	90 95       	com	r25
 888:	8e 0f       	add	r24, r30
 88a:	9f 1f       	adc	r25, r31
 88c:	08 95       	ret

0000088e <strnlen>:
 88e:	fc 01       	movw	r30, r24
 890:	61 50       	subi	r22, 0x01	; 1
 892:	70 40       	sbci	r23, 0x00	; 0
 894:	01 90       	ld	r0, Z+
 896:	01 10       	cpse	r0, r1
 898:	d8 f7       	brcc	.-10     	; 0x890 <strnlen+0x2>
 89a:	80 95       	com	r24
 89c:	90 95       	com	r25
 89e:	8e 0f       	add	r24, r30
 8a0:	9f 1f       	adc	r25, r31
 8a2:	08 95       	ret

000008a4 <fputc>:
 8a4:	0f 93       	push	r16
 8a6:	1f 93       	push	r17
 8a8:	cf 93       	push	r28
 8aa:	df 93       	push	r29
 8ac:	fb 01       	movw	r30, r22
 8ae:	23 81       	ldd	r18, Z+3	; 0x03
 8b0:	21 fd       	sbrc	r18, 1
 8b2:	03 c0       	rjmp	.+6      	; 0x8ba <fputc+0x16>
 8b4:	8f ef       	ldi	r24, 0xFF	; 255
 8b6:	9f ef       	ldi	r25, 0xFF	; 255
 8b8:	28 c0       	rjmp	.+80     	; 0x90a <fputc+0x66>
 8ba:	22 ff       	sbrs	r18, 2
 8bc:	16 c0       	rjmp	.+44     	; 0x8ea <fputc+0x46>
 8be:	46 81       	ldd	r20, Z+6	; 0x06
 8c0:	57 81       	ldd	r21, Z+7	; 0x07
 8c2:	24 81       	ldd	r18, Z+4	; 0x04
 8c4:	35 81       	ldd	r19, Z+5	; 0x05
 8c6:	42 17       	cp	r20, r18
 8c8:	53 07       	cpc	r21, r19
 8ca:	44 f4       	brge	.+16     	; 0x8dc <fputc+0x38>
 8cc:	a0 81       	ld	r26, Z
 8ce:	b1 81       	ldd	r27, Z+1	; 0x01
 8d0:	9d 01       	movw	r18, r26
 8d2:	2f 5f       	subi	r18, 0xFF	; 255
 8d4:	3f 4f       	sbci	r19, 0xFF	; 255
 8d6:	31 83       	std	Z+1, r19	; 0x01
 8d8:	20 83       	st	Z, r18
 8da:	8c 93       	st	X, r24
 8dc:	26 81       	ldd	r18, Z+6	; 0x06
 8de:	37 81       	ldd	r19, Z+7	; 0x07
 8e0:	2f 5f       	subi	r18, 0xFF	; 255
 8e2:	3f 4f       	sbci	r19, 0xFF	; 255
 8e4:	37 83       	std	Z+7, r19	; 0x07
 8e6:	26 83       	std	Z+6, r18	; 0x06
 8e8:	10 c0       	rjmp	.+32     	; 0x90a <fputc+0x66>
 8ea:	eb 01       	movw	r28, r22
 8ec:	09 2f       	mov	r16, r25
 8ee:	18 2f       	mov	r17, r24
 8f0:	00 84       	ldd	r0, Z+8	; 0x08
 8f2:	f1 85       	ldd	r31, Z+9	; 0x09
 8f4:	e0 2d       	mov	r30, r0
 8f6:	19 95       	eicall
 8f8:	89 2b       	or	r24, r25
 8fa:	e1 f6       	brne	.-72     	; 0x8b4 <fputc+0x10>
 8fc:	8e 81       	ldd	r24, Y+6	; 0x06
 8fe:	9f 81       	ldd	r25, Y+7	; 0x07
 900:	01 96       	adiw	r24, 0x01	; 1
 902:	9f 83       	std	Y+7, r25	; 0x07
 904:	8e 83       	std	Y+6, r24	; 0x06
 906:	81 2f       	mov	r24, r17
 908:	90 2f       	mov	r25, r16
 90a:	df 91       	pop	r29
 90c:	cf 91       	pop	r28
 90e:	1f 91       	pop	r17
 910:	0f 91       	pop	r16
 912:	08 95       	ret

00000914 <__ultoa_invert>:
 914:	fa 01       	movw	r30, r20
 916:	aa 27       	eor	r26, r26
 918:	28 30       	cpi	r18, 0x08	; 8
 91a:	51 f1       	breq	.+84     	; 0x970 <__ultoa_invert+0x5c>
 91c:	20 31       	cpi	r18, 0x10	; 16
 91e:	81 f1       	breq	.+96     	; 0x980 <__ultoa_invert+0x6c>
 920:	e8 94       	clt
 922:	6f 93       	push	r22
 924:	6e 7f       	andi	r22, 0xFE	; 254
 926:	6e 5f       	subi	r22, 0xFE	; 254
 928:	7f 4f       	sbci	r23, 0xFF	; 255
 92a:	8f 4f       	sbci	r24, 0xFF	; 255
 92c:	9f 4f       	sbci	r25, 0xFF	; 255
 92e:	af 4f       	sbci	r26, 0xFF	; 255
 930:	b1 e0       	ldi	r27, 0x01	; 1
 932:	3e d0       	rcall	.+124    	; 0x9b0 <__ultoa_invert+0x9c>
 934:	b4 e0       	ldi	r27, 0x04	; 4
 936:	3c d0       	rcall	.+120    	; 0x9b0 <__ultoa_invert+0x9c>
 938:	67 0f       	add	r22, r23
 93a:	78 1f       	adc	r23, r24
 93c:	89 1f       	adc	r24, r25
 93e:	9a 1f       	adc	r25, r26
 940:	a1 1d       	adc	r26, r1
 942:	68 0f       	add	r22, r24
 944:	79 1f       	adc	r23, r25
 946:	8a 1f       	adc	r24, r26
 948:	91 1d       	adc	r25, r1
 94a:	a1 1d       	adc	r26, r1
 94c:	6a 0f       	add	r22, r26
 94e:	71 1d       	adc	r23, r1
 950:	81 1d       	adc	r24, r1
 952:	91 1d       	adc	r25, r1
 954:	a1 1d       	adc	r26, r1
 956:	20 d0       	rcall	.+64     	; 0x998 <__ultoa_invert+0x84>
 958:	09 f4       	brne	.+2      	; 0x95c <__ultoa_invert+0x48>
 95a:	68 94       	set
 95c:	3f 91       	pop	r19
 95e:	2a e0       	ldi	r18, 0x0A	; 10
 960:	26 9f       	mul	r18, r22
 962:	11 24       	eor	r1, r1
 964:	30 19       	sub	r19, r0
 966:	30 5d       	subi	r19, 0xD0	; 208
 968:	31 93       	st	Z+, r19
 96a:	de f6       	brtc	.-74     	; 0x922 <__ultoa_invert+0xe>
 96c:	cf 01       	movw	r24, r30
 96e:	08 95       	ret
 970:	46 2f       	mov	r20, r22
 972:	47 70       	andi	r20, 0x07	; 7
 974:	40 5d       	subi	r20, 0xD0	; 208
 976:	41 93       	st	Z+, r20
 978:	b3 e0       	ldi	r27, 0x03	; 3
 97a:	0f d0       	rcall	.+30     	; 0x99a <__ultoa_invert+0x86>
 97c:	c9 f7       	brne	.-14     	; 0x970 <__ultoa_invert+0x5c>
 97e:	f6 cf       	rjmp	.-20     	; 0x96c <__ultoa_invert+0x58>
 980:	46 2f       	mov	r20, r22
 982:	4f 70       	andi	r20, 0x0F	; 15
 984:	40 5d       	subi	r20, 0xD0	; 208
 986:	4a 33       	cpi	r20, 0x3A	; 58
 988:	18 f0       	brcs	.+6      	; 0x990 <__ultoa_invert+0x7c>
 98a:	49 5d       	subi	r20, 0xD9	; 217
 98c:	31 fd       	sbrc	r19, 1
 98e:	40 52       	subi	r20, 0x20	; 32
 990:	41 93       	st	Z+, r20
 992:	02 d0       	rcall	.+4      	; 0x998 <__ultoa_invert+0x84>
 994:	a9 f7       	brne	.-22     	; 0x980 <__ultoa_invert+0x6c>
 996:	ea cf       	rjmp	.-44     	; 0x96c <__ultoa_invert+0x58>
 998:	b4 e0       	ldi	r27, 0x04	; 4
 99a:	a6 95       	lsr	r26
 99c:	97 95       	ror	r25
 99e:	87 95       	ror	r24
 9a0:	77 95       	ror	r23
 9a2:	67 95       	ror	r22
 9a4:	ba 95       	dec	r27
 9a6:	c9 f7       	brne	.-14     	; 0x99a <__ultoa_invert+0x86>
 9a8:	00 97       	sbiw	r24, 0x00	; 0
 9aa:	61 05       	cpc	r22, r1
 9ac:	71 05       	cpc	r23, r1
 9ae:	08 95       	ret
 9b0:	9b 01       	movw	r18, r22
 9b2:	ac 01       	movw	r20, r24
 9b4:	0a 2e       	mov	r0, r26
 9b6:	06 94       	lsr	r0
 9b8:	57 95       	ror	r21
 9ba:	47 95       	ror	r20
 9bc:	37 95       	ror	r19
 9be:	27 95       	ror	r18
 9c0:	ba 95       	dec	r27
 9c2:	c9 f7       	brne	.-14     	; 0x9b6 <__ultoa_invert+0xa2>
 9c4:	62 0f       	add	r22, r18
 9c6:	73 1f       	adc	r23, r19
 9c8:	84 1f       	adc	r24, r20
 9ca:	95 1f       	adc	r25, r21
 9cc:	a0 1d       	adc	r26, r0
 9ce:	08 95       	ret

000009d0 <_exit>:
 9d0:	f8 94       	cli

000009d2 <__stop_program>:
 9d2:	ff cf       	rjmp	.-2      	; 0x9d2 <__stop_program>
